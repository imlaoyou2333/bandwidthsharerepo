name: Scheduled Docker Extract and Release

on:
  schedule:
    - cron: '0 0 */2 * *'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract Docker image digest
      run: |
        docker pull earnfm/earnfm-client
        FULL_DIGEST=$(docker inspect earnfm/earnfm-client --format '{{index .RepoDigests 0}}')
        SHORT_DIGEST=$(echo "${FULL_DIGEST#*@sha256:}" | cut -c1-12)
        echo "DIGEST=${SHORT_DIGEST}" >> $GITHUB_ENV
        echo "TAG_NAME=EarnFM-${SHORT_DIGEST}" >> $GITHUB_ENV

    - name: Create and push tags
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
        
        git tag $TAG_NAME
        git push origin $TAG_NAME
        git tag -f latest
        git push origin latest --force

    - name: Extract files from Docker image
      run: |
        mkdir -p app_files
        CONTAINER_ID=$(docker create --rm earnfm/earnfm-client)
        docker cp $CONTAINER_ID:/app ./app_files/
        sudo chown -R $(id -u):$(id -g) ./app_files
        docker rm $CONTAINER_ID >/dev/null

    - name: Install zip
      run: sudo apt-get install -y zip

    - name: Compress files
      run: cd app_files && zip -r ../earnfm.zip .

    - name: Upload Digest Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: "earnfm-client (Build ${{ env.SHORT_DIGEST }})"
        files: earnfm.zip
        make_latest: false  # 关键参数：禁止成为latest release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Latest Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: latest
        files: earnfm.zip
        overwrite: true
        make_latest: true  # 确保成为latest release
        # 不设置name参数以保留原有标题
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}